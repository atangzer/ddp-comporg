////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 1995-2013 Xilinx, Inc.  All rights reserved.
////////////////////////////////////////////////////////////////////////////////
//   ____  ____ 
//  /   /\/   / 
// /___/  \  /    Vendor: Xilinx 
// \   \   \/     Version : 14.7
//  \   \         Application : sch2hdl
//  /   /         Filename : topMod.vf
// /___/   /\     Timestamp : 03/14/2020 15:55:04
// \   \  /  \ 
//  \___\/\___\ 
//
//Command: sch2hdl -sympath "C:/Users/Anna/Desktop/Comp Org/Labs/Org02_20200218/Org02_20200218/TANGANNAYONGQI3180300155_02" -sympath "C:/Users/Anna/Desktop/Comp Org/Labs/Org02_20200218/Org02_20200218/OExp02-7SEG" -sympath "C:/Users/Anna/Desktop/Comp Org/Labs/Org03_20200218/Org03_20200218/OExp03-IP2SOC/ipcore_dir" -intstyle ise -family kintex7 -verilog "C:/Users/Anna/Desktop/Comp Org/Labs/Org03_20200218/Org03_20200218/OExp03-IP2SOC/topMod.vf" -w "C:/Users/Anna/Desktop/Comp Org/Labs/Org03_20200218/Org03_20200218/OExp03-IP2SOC/topMod.sch"
//Design Name: topMod
//Device: kintex7
//Purpose:
//    This verilog netlist is translated from an ECS schematic.It can be 
//    synthesized and simulated, but it should not be modified. 
//
`timescale 1ns / 1ps

module topMod(BTN_y, 
              clk_100mhz, 
              RSTN, 
              SW, 
              AN, 
              BTN_x, 
              Buzzer, 
              CR, 
              LED, 
              led_clk, 
              led_clrn, 
              LED_PEN, 
              led_sout, 
              RDY, 
              readn, 
              SEGMENT, 
              seg_clk, 
              seg_clrn, 
              SEG_PEN, 
              seg_sout);

    input [3:0] BTN_y;
    input clk_100mhz;
    input RSTN;
    input [15:0] SW;
   output [3:0] AN;
   output [4:0] BTN_x;
   output Buzzer;
   output CR;
   output [7:0] LED;
   output led_clk;
   output led_clrn;
   output LED_PEN;
   output led_sout;
   output RDY;
   output readn;
   output [7:0] SEGMENT;
   output seg_clk;
   output seg_clrn;
   output SEG_PEN;
   output seg_sout;
   
   wire [31:0] Addr_out;
   wire [31:0] Ai;
   wire [31:0] Bi;
   wire [7:0] blink;
   wire [3:0] BTN_OK;
   wire Clk_CPU;
   wire [31:0] counter_out;
   wire [31:0] CPU2IO;
   wire [31:0] Data_in;
   wire [31:0] Data_out;
   wire [31:0] Disp_num;
   wire [31:0] Div;
   wire GPIOF0;
   wire [31:0] inst;
   wire [31:0] inst_in;
   wire IO_clk;
   wire [15:0] led_out;
   wire [7:0] LE_out;
   wire N0;
   wire [31:0] PC;
   wire [7:0] point_out;
   wire [3:0] Pulse;
   wire rst;
   wire [15:0] SW_OK;
   wire V5;
   wire [4:0] XLXN_8;
   wire XLXN_33;
   wire XLXN_36;
   wire XLXN_64;
   wire [63:0] XLXN_68;
   wire [13:0] XLXN_76;
   wire XLXN_81;
   wire XLXN_82;
   wire XLXN_84;
   wire [1:0] XLXN_86;
   wire XLXN_91;
   wire XLXN_112;
   wire [31:0] XLXN_120;
   wire [9:0] XLXN_122;
   wire [0:0] XLXN_124;
   wire [31:0] XLXN_125;
   wire [1:0] XLXN_132;
   wire [21:0] XLXN_134;
   wire RDY_DUMMY;
   wire readn_DUMMY;
   
   assign RDY = RDY_DUMMY;
   assign readn = readn_DUMMY;
   SEnter_2_32  M4 (.BTN(BTN_OK[2:0]), 
                   .clk(clk_100mhz), 
                   .Ctrl({SW_OK[7:5], SW_OK[15], SW_OK[0]}), 
                   .Din(XLXN_8[4:0]), 
                   .D_ready(RDY_DUMMY), 
                   .Ai(Ai[31:0]), 
                   .Bi(Bi[31:0]), 
                   .blink(blink[7:0]), 
                   .readn(readn_DUMMY));
   SCPU  U1 (.clk(Clk_CPU), 
            .Data_in(Data_in[31:0]), 
            .inst_in(inst_in[31:0]), 
            .INT(XLXN_81), 
            .MIO_ready(), 
            .reset(XLXN_33), 
            .Addr_out(Addr_out[31:0]), 
            .CPU_MIO(), 
            .Data_out(Data_out[31:0]), 
            .mem_w(XLXN_112), 
            .PC_out(PC[31:0]));
   ROM_D  U2 (.a(PC[11:2]), 
             .spo(inst_in[31:0]));
   RAM_B  U3 (.addra(XLXN_122[9:0]), 
             .clka(XLXN_36), 
             .dina(XLXN_125[31:0]), 
             .wea(XLXN_124[0]), 
             .douta(XLXN_120[31:0]));
   MIO_BUS  U4 (.addr_bus(Addr_out[31:0]), 
               .BTN(BTN_OK[3:0]), 
               .clk(clk_100mhz), 
               .counter_out(counter_out[31:0]), 
               .counter0_out(XLXN_81), 
               .counter1_out(XLXN_82), 
               .counter2_out(XLXN_84), 
               .Cpu_data2bus(Data_out[31:0]), 
               .led_out(led_out[15:0]), 
               .mem_w(XLXN_112), 
               .ram_data_out(XLXN_120[31:0]), 
               .rst(XLXN_33), 
               .SW(SW_OK[15:0]), 
               .counter_we(XLXN_64), 
               .Cpu_data4bus(Data_in[31:0]), 
               .data_ram_we(XLXN_124[0]), 
               .GPIOe0000000_we(XLXN_91), 
               .GPIOf0000000_we(GPIOF0), 
               .Peripheral_in(CPU2IO[31:0]), 
               .ram_addr(XLXN_122[9:0]), 
               .ram_data_in(XLXN_125[31:0]));
   Multi_8CH32  U5 (.clk(IO_clk), 
                   .Data0(CPU2IO[31:0]), 
                   .data1({N0, N0, PC[31:2]}), 
                   .data2(inst[31:0]), 
                   .data3(counter_out[31:0]), 
                   .data4(Addr_out[31:0]), 
                   .data5(Data_out[31:0]), 
                   .data6(Data_in[31:0]), 
                   .data7(PC[31:0]), 
                   .EN(XLXN_91), 
                   .LES(XLXN_68[63:0]), 
                   .point_in({Div[31:0], Div[31:0]}), 
                   .rst(XLXN_33), 
                   .Test(SW_OK[7:5]), 
                   .Disp_num(Disp_num[31:0]), 
                   .LE_out(LE_out[7:0]), 
                   .point_out(point_out[7:0]));
   SSeg7_Dev  U6 (.clk(clk_100mhz), 
                 .flash(Div[25]), 
                 .Hexs(Disp_num[31:0]), 
                 .LES(LE_out[7:0]), 
                 .point(point_out[7:0]), 
                 .rst(rst), 
                 .Start(Div[20]), 
                 .SW0(SW_OK[0]), 
                 .seg_clk(seg_clk), 
                 .seg_clrn(seg_clrn), 
                 .SEG_PEN(SEG_PEN), 
                 .seg_sout(seg_sout));
   SPIO  U7 (.clk(IO_clk), 
            .EN(GPIOF0), 
            .P_Data(CPU2IO[31:0]), 
            .rst(XLXN_33), 
            .Start(Div[20]), 
            .counter_set(XLXN_86[1:0]), 
            .GPIOf0(XLXN_76[13:0]), 
            .led_clk(led_clk), 
            .led_clrn(led_clrn), 
            .LED_out(led_out[15:0]), 
            .LED_PEN(LED_PEN), 
            .led_sout(led_sout));
   clk_div  U8 (.clk(clk_100mhz), 
               .rst(XLXN_33), 
               .SW2(SW_OK[2]), 
               .clkdiv(Div[31:0]), 
               .Clk_CPU(Clk_CPU));
   SAnti_jitter  U9 (.clk(clk_100mhz), 
                    .Key_y(BTN_y[3:0]), 
                    .readn(readn_DUMMY), 
                    .RSTN(RSTN), 
                    .SW(SW[15:0]), 
                    .BTN_OK(BTN_OK[3:0]), 
                    .CR(CR), 
                    .Key_out(XLXN_8[4:0]), 
                    .Key_ready(RDY_DUMMY), 
                    .Key_x(BTN_x[4:0]), 
                    .pulse_out(Pulse[3:0]), 
                    .rst(XLXN_33), 
                    .SW_OK(SW_OK[15:0]));
   Counter_x  U10 (.clk(IO_clk), 
                  .clk0(Div[6]), 
                  .clk1(Div[9]), 
                  .clk2(Div[11]), 
                  .counter_ch(XLXN_86[1:0]), 
                  .counter_val(CPU2IO[31:0]), 
                  .counter_we(XLXN_64), 
                  .rst(XLXN_33), 
                  .counter_out(counter_out[31:0]), 
                  .counter0_OUT(XLXN_81), 
                  .counter1_OUT(XLXN_82), 
                  .counter2_OUT(XLXN_84));
   Seg7_Dev  U61 (.flash(Div[25]), 
                 .Hexs(Disp_num[31:0]), 
                 .LES(LE_out[7:0]), 
                 .point(point_out[7:0]), 
                 .Scan({SW_OK[1], Div[19:18]}), 
                 .SW0(SW_OK[0]), 
                 .AN(AN[3:0]), 
                 .SEGMENT(SEGMENT[7:0]));
   PIO  U71 (.clk(clk_100mhz), 
            .EN(V5), 
            .PData_in(Ai[31:0]), 
            .rst(rst), 
            .counter_set(XLXN_132[1:0]), 
            .GPIOf0(XLXN_134[21:0]), 
            .LED_out(LED[7:0]));
   INV  XLXI_18 (.I(clk_100mhz), 
                .O(XLXN_36));
   INV  XLXI_19 (.I(Clk_CPU), 
                .O(IO_clk));
   VCC  XLXI_20 (.P(V5));
   GND  XLXI_21 (.G(N0));
   BUF  XLXI_24 (.I(V5), 
                .O(Buzzer));
endmodule
